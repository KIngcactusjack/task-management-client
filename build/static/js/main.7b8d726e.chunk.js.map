{"version":3,"sources":["todo-form.js","todo-task.js","todo-list.js","search-form.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","_useState2","Object","slicedToArray","userInput","setUserInput","react_default","a","createElement","type","value","onChange","event","currentTarget","placeholder","onClick","preventDefault","Axios","post","taskName","complete","then","console","log","window","location","reload","TodoTask","id","todo","key","name","e","handleToggle","className","TodoList","todoList","map","todo_task","clearCompletedTask","SearchForm","searchInput","setSearchInput","filter","toLowerCase","includes","App","todoList_","setTodoList","useEffect","get","response","data","todo_list","mappedList","task","put","Number","objectSpread","delete","todo_form","search_form","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7b8d726e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction TodoForm(props) {\n\n    const [userInput, setUserInput] = useState('');\n    const handleChange = event => {\n        setUserInput(event.currentTarget.value);\n    }\n    const handleSubmit = event => {\n        event.preventDefault();\n        Axios.post('https://task-management-busy-qa.herokuapp.com/addTask', { taskName: userInput, complete: false }).then(() => {\n            console.log('Task added successfuly');\n            // props.addTask(userInput);\n            window.location.reload(false);\n        });\n        setUserInput('');\n    }\n\n    return (\n        <div>\n            <form>\n                <input type=\"text\" value={userInput} onChange={handleChange} placeholder=\"Enter a Todo Task\" />\n                <button onClick={handleSubmit}>Add Task</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoForm\n","import React from \"react\";\n\nfunction TodoTask(props) {\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        props.handleToggle(e.currentTarget.id);\n\n    }\n\n\n    return (\n        <div id={props.todo.id} key={props.todo.id} name=\"todo\" value={props.todo.id} onClick={handleClick} className={props.todo.complete ? \"todo strike\" : \"todo\"}>\n\n\n            {props.todo.taskName}\n        </div>\n    )\n}\nexport default TodoTask","import React from \"react\";\n\nimport TodoTask from \"./todo-task\"\n\nfunction TodoList(props) {\n    return (\n        <div>\n            {props.todoList.map(todo => {\n                return <TodoTask todo={todo} handleToggle={props.handleToggle} />\n            })}\n            <button onClick={props.clearCompletedTask} >\n                Clear Completed Tasks\n            </button>\n        </div>\n    )\n}\n\nexport default TodoList","import React, { useState } from \"react\";\nimport TodoTask from \"./todo-task\"\n\n\nconst SearchForm = props => {\n    const [searchInput, setSearchInput] = useState('');\n    const handleSearcInput = event => {\n        setSearchInput(event.currentTarget.value);\n    }\n    // const handleSearch = event => {\n    //     event.preventDefault();\n    //     // props.addTask(searchInput);\n    //     const lowerSearchInput = searchInput.toLowerCase();\n    //     // console.log(lowerSearchInput);\n    //     setSearchInput('');\n    // }\n    return (\n        <div>\n            <form>\n                <input type=\"text\" value={searchInput} onChange={handleSearcInput} placeholder=\"Search for a Todo Task\" />\n                {/* <button onClick={handleSearch}>Search</button> */}\n            </form>\n            {props.todoList.filter(todo => {\n                if (searchInput === '') {\n                    return todo;\n                } else if (todo.taskName.toLowerCase().includes(searchInput.toLowerCase())) {\n                    return todo;\n                }\n            }).map(todo => {\n                return <TodoTask todo={todo} handleToggle={props.handleToggle} />\n            })}\n        </div>\n    );\n}\n\nexport default SearchForm;","import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./todo-form\";\nimport TodoList from \"./todo-list\";\nimport Axios from \"axios\";\nimport './App.css';\nimport SearchForm from \"./search-form\";\n\n\nfunction App() {\n  const [todoList_, setTodoList] = useState([]);\n\n  useEffect(() => {\n    Axios.get('https://task-management-busy-qa.herokuapp.com/getAllTasks').then((response) => {\n      setTodoList(response.data);\n    });\n  }, []);\n\n\n  const handleToggle_ = (id) => {\n    var mappedList = todoList_.map((task) => {\n      // if (Number(id) === task.id) { alert(task.complete); }\n      Axios.put('https://task-management-busy-qa.herokuapp.com/updateCompleteTask', { id: Number(id), complete: !task.complete }).then(() => {\n        console.log('Completed Task updated successfuly');\n        // props.addTask(userInput);\n        // window.location.reload(false);\n      });\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task }\n    });\n    setTodoList(mappedList);\n  }\n  const clearCompleted_ = () => {\n    // var notCompletedTaskList = \n    todoList_.filter(task => {\n      Axios.delete('https://task-management-busy-qa.herokuapp.com/deleteCompletedTask').then(() => {\n        console.log('Completed Tasks deleted successfuly');\n        // props.addTask(userInput);\n        window.location.reload(false);\n      });\n    })\n    // setTodoList(notCompletedTaskList);\n  }\n  // const addTask_ = (userInput) => {\n  //   var copy = [...todoList_];\n  //   // copy = [...copy, { id: todoList_.length + 1, task: userInput, complete: false }]\n  //   setTodoList(copy);\n  // }\n  return (\n    <div className=\"App\">\n      <TodoList todoList={todoList_} handleToggle={handleToggle_} clearCompletedTask={clearCompleted_} />\n      <TodoForm />\n      <SearchForm todoList={todoList_} />\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n//mysql\n//mysql workbench","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}